---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by iTexZ.
--- DateTime: 04/06/2020 18:39
---
UIInstructionalButton = {}
local __instance = { __index = UIInstructionalButton }

---New
---@param scaleform string
---@return table
---@public
function UIInstructionalButton.New(scaleform)
    local self = {
        scaleform = RequestScaleformMovie(scaleform or "INSTRUCTIONAL_BUTTONS"),
        display = false,
        color = { r = 0, g = 0, b = 0, a = 80 },
        items = {}
    }
    
    return setmetatable(self, __instance)
end

UIInstructionalButton.__constructor = UIInstructionalButton.New -- compatibility

---Add
---@param name string
---@param control number https://docs.fivem.net/docs/game-references/controls/
---@return void
---@public
function UIInstructionalButton:Add(name, control)
    self.items[#self.items + 1] = { name = name, control = control }
end

---Remove
---@param name string
---@param control number
---@return void
---@public
function UIInstructionalButton:Remove(name, control)
    for i = 1, #self.items, 1 do
        if self.items[i] then
            if (name == nil or (self.items[i].name == name)) and (control == nil or (self.items[i].control == control)) then
                self.items[i] = nil
            end
        end
    end
end

UIInstructionalButton.Delete = UIInstructionalButton.Remove -- compatibility

---UpdateBackground
---@param r number
---@param g number
---@param b number
---@param a number
---@return table
---@public
function UIInstructionalButton:UpdateBackground(r, g, b, a)
    self.color = { r = r, g = g, b = b, a = a }
    return self.color
end

---Visible
---@param bool boolean
---@return boolean
---@public
function UIInstructionalButton:Visible(bool)
    self.display = bool
    return self.display
end

---Refresh
---@return void
---@private
function UIInstructionalButton:Refresh()
    BeginScaleformMovieMethod(self.scaleform, "CLEAR_ALL")
    EndScaleformMovieMethod()

    BeginScaleformMovieMethod(self.scaleform, "TOGGLE_MOUSE_BUTTONS")
    ScaleformMovieMethodAddParamInt(0)
    EndScaleformMovieMethod()

    BeginScaleformMovieMethod(self.scaleform, "SET_BACKGROUND_COLOUR")
    ScaleformMovieMethodAddParamInt(self.color.r)
    ScaleformMovieMethodAddParamInt(self.color.g)
    ScaleformMovieMethodAddParamInt(self.color.b)
    ScaleformMovieMethodAddParamInt(self.color.a)
    EndScaleformMovieMethod()

    PushScaleformMovieFunction(self.scaleform, "CREATE_CONTAINER")
    EndScaleformMovieMethod()

    for i = 1, #self.items, 1 do
        if self.items[i] then
            BeginScaleformMovieMethod(self.scaleform, "SET_DATA_SLOT")
            ScaleformMovieMethodAddParamInt(i)
            ScaleformMovieMethodAddParamPlayerNameString(GetControlInstructionalButton(0, self.items[i].control, true))
            ScaleformMovieMethodAddParamTextureNameString(self.items[i].name)
            EndScaleformMovieMethod()
        end
    end

    BeginScaleformMovieMethod(self.scaleform, "DRAW_INSTRUCTIONAL_BUTTONS")
    ScaleformMovieMethodAddParamInt(-1)
    EndScaleformMovieMethod()
end

UIInstructionalButton.onRefresh = UIInstructionalButton.Refresh -- compatibility

---Draw
---@return void
function UIInstructionalButton:Draw()
    if (#self.items > 0) and (self.display) then
        DrawScaleformMovieFullscreen(self.scaleform, 255, 255, 255, 255)
    end
end

UIInstructionalButton.onTick = UIInstructionalButton.Draw -- compatibility
