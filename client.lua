---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by iTexZ.
--- DateTime: 04/06/2020 18:39
---
UIInstructionalButton = setmetatable({}, UIInstructionalButton);

---@type table
UIInstructionalButton.__index = UIInstructionalButton

---__constructor
---@param scaleform string
---@return table
---@public
function UIInstructionalButton.__constructor(scaleform)
    local _UIInstructionalButton = {
        scaleform = RequestScaleformMovie(scaleform or "INSTRUCTIONAL_BUTTONS"),
        display = false,
        color = { r = 0, g = 0, b = 0, a = 80 },
        items = {};
    }
    return setmetatable(_UIInstructionalButton, UIInstructionalButton);
end

---Add
---@param name string
---@param control number https://docs.fivem.net/docs/game-references/controls/
---@return void
---@public
function UIInstructionalButton:Add(name, control)
    self.items[#self.items + 1] = { name = name, control = control }
    self:onRefresh();
end

---UpdateBackground
---@param r number
---@param g number
---@param b number
---@param a number
---@return table
---@public
function UIInstructionalButton:UpdateBackground(r, g, b, a)
    self.color = { r = r, g = g, b = b, a = a };
    self:onRefresh();
    return self.color
end

---Delete
---@param name string
---@param control number
---@return void
---@public
function UIInstructionalButton:Delete(name, control)
    for key, value in pairs(self.items) do
        if (value.name == name) and (control == nil) then
            self.items[key] = nil;
        elseif (value.name == name) and (value.control == control) then
            self.items[key] = nil;
        end
    end
    self:onRefresh();
end

---Visible
---@param bool boolean
---@return boolean
---@public
function UIInstructionalButton:Visible(bool)
    self.display = bool;
    return self.display;
end

---onRefresh
---@return void
---@private
function UIInstructionalButton:onRefresh()
    PushScaleformMovieFunction(self.scaleform, "CLEAR_ALL")
    PopScaleformMovieFunction()

    PushScaleformMovieFunction(self.scaleform, "TOGGLE_MOUSE_BUTTONS")
    PushScaleformMovieFunctionParameterInt(0)
    PopScaleformMovieFunction()

    PushScaleformMovieFunction(self.scaleform, "SET_BACKGROUND_COLOUR")
    PushScaleformMovieFunctionParameterInt(self.color.r)
    PushScaleformMovieFunctionParameterInt(self.color.g)
    PushScaleformMovieFunctionParameterInt(self.color.b)
    PushScaleformMovieFunctionParameterInt(self.color.a)
    PopScaleformMovieFunction()

    PushScaleformMovieFunction(self.scaleform, "CREATE_CONTAINER")
    PopScaleformMovieFunction()

    for key, value in pairs(self.items) do
        PushScaleformMovieFunction(self.scaleform, "SET_DATA_SLOT")
        PushScaleformMovieFunctionParameterInt(key)
        PushScaleformMovieMethodParameterButtonName(GetControlInstructionalButton(1, value.control, 0))
        PushScaleformMovieFunctionParameterString(value.name)
        PopScaleformMovieFunction()
    end

    PushScaleformMovieFunction(self.scaleform, "DRAW_INSTRUCTIONAL_BUTTONS")
    PushScaleformMovieFunctionParameterInt(-1)
    PopScaleformMovieFunction()
end

---onTick
---@return void
function UIInstructionalButton:onTick()
    if (#self.items > 0) and (self.display) then
        DrawScaleformMovieFullscreen(self.scaleform, 255, 255, 255, 255)
    end
end
